{"version":3,"file":"component.js","sources":["../../../../src/components/atoms/AnimatedText/component.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport opentype from \"opentype.js\";\nimport styles from \"./styles.module.css\";\n\ninterface AnimatedTextProps {\n  font: string;\n  text: string;\n  width: number;\n  delay?: number;\n  duration?: number;\n  strokeWidth?: number;\n  timingFunction?: string;\n  strokeColor?: string;\n  fillColor?: string;\n  repeat?: boolean;\n}\n\nexport function AnimatedText({\n  font,\n  text,\n  width,\n  delay = 0.1,\n  duration = 3.1,\n  strokeWidth = 2,\n  timingFunction = \"ease-in\",\n  strokeColor = \"#ffffff\",\n  fillColor = \"#ffffff\",\n  repeat = true,\n}: AnimatedTextProps) {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [paths, setPaths] = useState<string[]>([]);\n  const [viewBox, setViewBox] = useState(\"0 0 0 0\");\n  const [height, setHeight] = useState(0);\n  const [scale, setScale] = useState(1);\n  const paddingFactor = 5;\n\n  useEffect(() => {\n    const loadFont = async () => {\n      const userFont: opentype.Font = await new Promise((resolve, reject) => {\n        opentype.load(font, (err, f) => {\n          if (err || !f) reject(err);\n          else resolve(f);\n        });\n      });\n\n      let x = 0;\n      const y = 100;\n      const fontSize = 120;\n      const spacingFactor = 0.12;\n      const generatedPaths: string[] = [];\n\n      let prevGlyph: opentype.Glyph | null = null;\n\n      for (const char of text) {\n        const glyph = userFont.charToGlyph(char);\n        const path = glyph.getPath(x, y, fontSize);\n        generatedPaths.push(path.toPathData(1));\n\n        const kerning = prevGlyph\n          ? userFont.getKerningValue(prevGlyph, glyph)\n          : 0;\n        x += (glyph.advanceWidth ?? fontSize) * spacingFactor + kerning;\n\n        prevGlyph = glyph;\n      }\n\n      setPaths(generatedPaths);\n    };\n\n    loadFont();\n  }, [text]);\n\n  // Compute dynamic viewBox and scale factor\n  useEffect(() => {\n    if (paths.length === 0) return;\n\n    const tempSvg = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"svg\"\n    );\n    const tempGroup = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n\n    paths.forEach((d) => {\n      const path = document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"path\"\n      );\n      path.setAttribute(\"d\", d);\n      tempGroup.appendChild(path);\n    });\n\n    tempSvg.appendChild(tempGroup);\n    document.body.appendChild(tempSvg);\n\n    const bbox = tempGroup.getBBox();\n    document.body.removeChild(tempSvg);\n\n    setViewBox(\n      `${bbox.x} ${bbox.y} ${bbox.width + paddingFactor} ${\n        bbox.height + paddingFactor\n      }`\n    );\n    setHeight((bbox.height / bbox.width) * width);\n    setScale(width / bbox.width); // scale factor for path lengths\n  }, [paths, width]);\n\n  // Animate paths with proportional path length\n   useEffect(() => {\n    if (!svgRef.current) return;\n    const svg = svgRef.current;\n\n    // Create animation and prevent duplicates (useEffect runs many times)\n    let styleEl = svg.querySelector(\"style[data-svg-anim]\") as HTMLStyleElement | null;\n    if (!styleEl) {\n      styleEl = document.createElement(\"style\");\n      styleEl.setAttribute(\"data-svg-anim\", \"true\");\n      svg.appendChild(styleEl);\n    }\n    // Add keyframes to style\n    const animationName = `svgTextAnim_${Math.random().toString(36).slice(2, 8)}`;\n    styleEl.textContent = `\n      @keyframes ${animationName} {\n        40% { stroke-dashoffset: 0; fill: transparent; }\n        60% { stroke-dashoffset: 0; fill: ${fillColor}; }\n        100% { stroke-dashoffset: 0; fill: ${fillColor}; }\n      }\n    `;\n\n    const pathElements = svg.querySelectorAll(\"path\");\n    const iteration = repeat ? \"infinite\" : \"forwards\";\n\n    pathElements.forEach((path) => {\n      const length = path.getTotalLength() * scale;\n      path.style.strokeDasharray = `${length}px`;\n      path.style.strokeDashoffset = `${length}px`;\n      path.style.strokeWidth = `${strokeWidth}px`;\n      path.style.stroke = strokeColor;\n      path.style.fill = \"none\";\n      path.style.animation = `${animationName} ${duration}s ${timingFunction} ${delay}s ${iteration}`;\n      console.log(styles.svgTextAnim); \n    });\n  }, [paths, strokeWidth, strokeColor, duration, delay, timingFunction, repeat, scale]);\n\n\n  return (\n    <div className={styles.container}>\n      <svg\n        ref={svgRef}\n        width={width}\n        height={height}\n        viewBox={viewBox}\n        preserveAspectRatio=\"xMinYMid meet\"\n      >\n        <g>\n          {paths.map((d, i) => (\n            <path key={i} d={d} vectorEffect=\"non-scaling-stroke\" />\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n}\n"],"names":["AnimatedText","font","text","width","delay","duration","strokeWidth","timingFunction","strokeColor","fillColor","repeat","svgRef","useRef","paths","setPaths","useState","viewBox","setViewBox","height","setHeight","scale","setScale","paddingFactor","useEffect","loadFont","userFont","Promise","resolve","reject","opentype","load","err","f","x","y","fontSize","spacingFactor","generatedPaths","prevGlyph","char","glyph","charToGlyph","path","getPath","push","toPathData","kerning","getKerningValue","advanceWidth","length","tempSvg","document","createElementNS","tempGroup","forEach","d","setAttribute","appendChild","body","bbox","getBBox","removeChild","current","svg","styleEl","querySelector","createElement","animationName","Math","random","toString","slice","textContent","pathElements","querySelectorAll","iteration","getTotalLength","style","strokeDasharray","strokeDashoffset","stroke","fill","animation","console","log","styles","svgTextAnim","_jsx","className","container","children","ref","preserveAspectRatio","map","i","vectorEffect"],"mappings":";;;;;AAiBO,SAASA,YAAYA,CAAC;EAC3BC,IAAI;EACJC,IAAI;EACJC,KAAK;AACLC,EAAAA,KAAK,GAAG,GAAG;AACXC,EAAAA,QAAQ,GAAG,GAAG;AACdC,EAAAA,WAAW,GAAG,CAAC;AACfC,EAAAA,cAAc,GAAG,SAAS;AAC1BC,EAAAA,WAAW,GAAG,SAAS;AACvBC,EAAAA,SAAS,GAAG,SAAS;AACrBC,EAAAA,MAAM,GAAG,IAAA;AACQ,CAAC,EAAE;AACpB,EAAA,MAAMC,MAAM,GAAGC,MAAM,CAAgB,IAAI,CAAC,CAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAW,EAAE,CAAC,CAAA;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,SAAS,CAAC,CAAA;EACjD,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAA;EACvC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAA;EACrC,MAAMO,aAAa,GAAG,CAAC,CAAA;AAEvBC,EAAAA,SAAS,CAAC,MAAM;AACd,IAAA,MAAMC,QAAQ,GAAG,YAAY;MAC3B,MAAMC,QAAuB,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACrEC,QAAQ,CAACC,IAAI,CAAC7B,IAAI,EAAE,CAAC8B,GAAG,EAAEC,CAAC,KAAK;AAC9B,UAAA,IAAID,GAAG,IAAI,CAACC,CAAC,EAAEJ,MAAM,CAACG,GAAG,CAAC,CAAC,KACtBJ,OAAO,CAACK,CAAC,CAAC,CAAA;AACjB,SAAC,CAAC,CAAA;AACJ,OAAC,CAAC,CAAA;MAEF,IAAIC,CAAC,GAAG,CAAC,CAAA;MACT,MAAMC,CAAC,GAAG,GAAG,CAAA;MACb,MAAMC,QAAQ,GAAG,GAAG,CAAA;MACpB,MAAMC,aAAa,GAAG,IAAI,CAAA;MAC1B,MAAMC,cAAwB,GAAG,EAAE,CAAA;MAEnC,IAAIC,SAAgC,GAAG,IAAI,CAAA;AAE3C,MAAA,KAAK,MAAMC,IAAI,IAAIrC,IAAI,EAAE;AACvB,QAAA,MAAMsC,KAAK,GAAGf,QAAQ,CAACgB,WAAW,CAACF,IAAI,CAAC,CAAA;QACxC,MAAMG,IAAI,GAAGF,KAAK,CAACG,OAAO,CAACV,CAAC,EAAEC,CAAC,EAAEC,QAAQ,CAAC,CAAA;QAC1CE,cAAc,CAACO,IAAI,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;AAEvC,QAAA,MAAMC,OAAO,GAAGR,SAAS,GACrBb,QAAQ,CAACsB,eAAe,CAACT,SAAS,EAAEE,KAAK,CAAC,GAC1C,CAAC,CAAA;QACLP,CAAC,IAAI,CAACO,KAAK,CAACQ,YAAY,IAAIb,QAAQ,IAAIC,aAAa,GAAGU,OAAO,CAAA;AAE/DR,QAAAA,SAAS,GAAGE,KAAK,CAAA;AACnB,OAAA;MAEA1B,QAAQ,CAACuB,cAAc,CAAC,CAAA;KACzB,CAAA;AAEDb,IAAAA,QAAQ,EAAE,CAAA;AACZ,GAAC,EAAE,CAACtB,IAAI,CAAC,CAAC,CAAA;;AAEV;AACAqB,EAAAA,SAAS,CAAC,MAAM;AACd,IAAA,IAAIV,KAAK,CAACoC,MAAM,KAAK,CAAC,EAAE,OAAA;IAExB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,eAAe,CACtC,4BAA4B,EAC5B,KACF,CAAC,CAAA;IACD,MAAMC,SAAS,GAAGF,QAAQ,CAACC,eAAe,CACxC,4BAA4B,EAC5B,GACF,CAAC,CAAA;AAEDvC,IAAAA,KAAK,CAACyC,OAAO,CAAEC,CAAC,IAAK;MACnB,MAAMb,IAAI,GAAGS,QAAQ,CAACC,eAAe,CACnC,4BAA4B,EAC5B,MACF,CAAC,CAAA;AACDV,MAAAA,IAAI,CAACc,YAAY,CAAC,GAAG,EAAED,CAAC,CAAC,CAAA;AACzBF,MAAAA,SAAS,CAACI,WAAW,CAACf,IAAI,CAAC,CAAA;AAC7B,KAAC,CAAC,CAAA;AAEFQ,IAAAA,OAAO,CAACO,WAAW,CAACJ,SAAS,CAAC,CAAA;AAC9BF,IAAAA,QAAQ,CAACO,IAAI,CAACD,WAAW,CAACP,OAAO,CAAC,CAAA;AAElC,IAAA,MAAMS,IAAI,GAAGN,SAAS,CAACO,OAAO,EAAE,CAAA;AAChCT,IAAAA,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,OAAO,CAAC,CAAA;IAElCjC,UAAU,CACR,GAAG0C,IAAI,CAAC1B,CAAC,CAAI0B,CAAAA,EAAAA,IAAI,CAACzB,CAAC,CAAIyB,CAAAA,EAAAA,IAAI,CAACxD,KAAK,GAAGmB,aAAa,CAC/CqC,CAAAA,EAAAA,IAAI,CAACzC,MAAM,GAAGI,aAAa,CAAA,CAE/B,CAAC,CAAA;IACDH,SAAS,CAAEwC,IAAI,CAACzC,MAAM,GAAGyC,IAAI,CAACxD,KAAK,GAAIA,KAAK,CAAC,CAAA;IAC7CkB,QAAQ,CAAClB,KAAK,GAAGwD,IAAI,CAACxD,KAAK,CAAC,CAAC;AAC/B,GAAC,EAAE,CAACU,KAAK,EAAEV,KAAK,CAAC,CAAC,CAAA;;AAElB;AACCoB,EAAAA,SAAS,CAAC,MAAM;AACf,IAAA,IAAI,CAACZ,MAAM,CAACmD,OAAO,EAAE,OAAA;AACrB,IAAA,MAAMC,GAAG,GAAGpD,MAAM,CAACmD,OAAO,CAAA;;AAE1B;AACA,IAAA,IAAIE,OAAO,GAAGD,GAAG,CAACE,aAAa,CAAC,sBAAsB,CAA4B,CAAA;IAClF,IAAI,CAACD,OAAO,EAAE;AACZA,MAAAA,OAAO,GAAGb,QAAQ,CAACe,aAAa,CAAC,OAAO,CAAC,CAAA;AACzCF,MAAAA,OAAO,CAACR,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAA;AAC7CO,MAAAA,GAAG,CAACN,WAAW,CAACO,OAAO,CAAC,CAAA;AAC1B,KAAA;AACA;IACA,MAAMG,aAAa,GAAG,CAAeC,YAAAA,EAAAA,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,CAAA,CAAA;IAC7EP,OAAO,CAACQ,WAAW,GAAG,CAAA;AAC1B,iBAAA,EAAmBL,aAAa,CAAA;AAChC;AACA,0CAAA,EAA4C1D,SAAS,CAAA;AACrD,2CAAA,EAA6CA,SAAS,CAAA;AACtD;AACA,IAAK,CAAA,CAAA;AAED,IAAA,MAAMgE,YAAY,GAAGV,GAAG,CAACW,gBAAgB,CAAC,MAAM,CAAC,CAAA;AACjD,IAAA,MAAMC,SAAS,GAAGjE,MAAM,GAAG,UAAU,GAAG,UAAU,CAAA;AAElD+D,IAAAA,YAAY,CAACnB,OAAO,CAAEZ,IAAI,IAAK;MAC7B,MAAMO,MAAM,GAAGP,IAAI,CAACkC,cAAc,EAAE,GAAGxD,KAAK,CAAA;AAC5CsB,MAAAA,IAAI,CAACmC,KAAK,CAACC,eAAe,GAAG,CAAA,EAAG7B,MAAM,CAAI,EAAA,CAAA,CAAA;AAC1CP,MAAAA,IAAI,CAACmC,KAAK,CAACE,gBAAgB,GAAG,CAAA,EAAG9B,MAAM,CAAI,EAAA,CAAA,CAAA;AAC3CP,MAAAA,IAAI,CAACmC,KAAK,CAACvE,WAAW,GAAG,CAAA,EAAGA,WAAW,CAAI,EAAA,CAAA,CAAA;AAC3CoC,MAAAA,IAAI,CAACmC,KAAK,CAACG,MAAM,GAAGxE,WAAW,CAAA;AAC/BkC,MAAAA,IAAI,CAACmC,KAAK,CAACI,IAAI,GAAG,MAAM,CAAA;AACxBvC,MAAAA,IAAI,CAACmC,KAAK,CAACK,SAAS,GAAG,CAAGf,EAAAA,aAAa,CAAI9D,CAAAA,EAAAA,QAAQ,KAAKE,cAAc,CAAA,CAAA,EAAIH,KAAK,CAAA,EAAA,EAAKuE,SAAS,CAAE,CAAA,CAAA;AAC/FQ,MAAAA,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,WAAW,CAAC,CAAA;AACjC,KAAC,CAAC,CAAA;AACJ,GAAC,EAAE,CAACzE,KAAK,EAAEP,WAAW,EAAEE,WAAW,EAAEH,QAAQ,EAAED,KAAK,EAAEG,cAAc,EAAEG,MAAM,EAAEU,KAAK,CAAC,CAAC,CAAA;AAGrF,EAAA,oBACEmE,GAAA,CAAA,KAAA,EAAA;IAAKC,SAAS,EAAEH,MAAM,CAACI,SAAU;AAAAC,IAAAA,QAAA,eAC/BH,GAAA,CAAA,KAAA,EAAA;AACEI,MAAAA,GAAG,EAAEhF,MAAO;AACZR,MAAAA,KAAK,EAAEA,KAAM;AACbe,MAAAA,MAAM,EAAEA,MAAO;AACfF,MAAAA,OAAO,EAAEA,OAAQ;AACjB4E,MAAAA,mBAAmB,EAAC,eAAe;AAAAF,MAAAA,QAAA,eAEnCH,GAAA,CAAA,GAAA,EAAA;QAAAG,QAAA,EACG7E,KAAK,CAACgF,GAAG,CAAC,CAACtC,CAAC,EAAEuC,CAAC,kBACdP,GAAA,CAAA,MAAA,EAAA;AAAchC,UAAAA,CAAC,EAAEA,CAAE;AAACwC,UAAAA,YAAY,EAAC,oBAAA;AAAoB,SAAA,EAA1CD,CAA4C,CACxD,CAAA;OACA,CAAA;KACA,CAAA;AAAC,GACH,CAAC,CAAA;AAEV;;;;"}